name: Instanciate public music

on: 
    workflow_dispatch
    #schedule:
    #- cron:  '0 */6 * * *'
    #- cron: '30 3,9,15,21 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ssh-key: ${{ secrets.SECRET_SSH_TO_CONFIGFILES_PRIVATE_KEY }}
        repository: jackett2/configfiles
        path: ./CONFIGFILES_PRIVATE

    - name: What time is it ?
      run: |
        date -u
        TZ="Europe/Paris" date
    
    - name: Install some packages
      run: |
         set -xe
         APT='sudo apt -y -qq -o=Dpkg::Use-Pty=0'
         echo "APT=$APT" >> $GITHUB_ENV
         
         $APT update
         #$APT install axel bmon colordiff fd-find ffmpeg htop nmon nmap ncat socat parallel python3 python3-dev python3-pip python3-virtualenv rar ripgrep virtualenvwrapper unrar
         $APT install docker-compose
         
    - name: Populate $CONFIGFILES_PRIVATE env var
      run: echo "CONFIGFILES_PRIVATE=$GITHUB_WORKSPACE/CONFIGFILES_PRIVATE" >> $GITHUB_ENV

    - name: Tweak some config and start the services
      run: |
        set -xe
        mkdir /tmp/music

        echo "${{ secrets.SECRET_MUSIC_SSH_KEY_PRIVATE }}" > /tmp/key
        chmod 400 /tmp/key
        
        cp -f -r $CONFIGFILES_PRIVATE/music/ /tmp/
        #cd /tmp/music/
        #docker-compose -f ./docker-compose.yml up -d

    - name: Install prerequisites
      run: |
         set -xe
         
         cd /tmp/
         
         sudo docker run -q --restart=always -itd --name warp_socks_v3 -p 9091:9091 monius/docker-warp-socks:v3

         cd /tmp/music/newleaf/
         sudo pip install -q -r requirements.txt
        
         export http_proxy="http://127.0.0.1:9091"
         export https_proxy="http://127.0.0.1:9091"

         sudo nohup python3 index.py > nohup_python.out 2> nohup_python.err < /dev/null &
         
         sudo $APT autoremove --purge nodejs npm
         sudo rm -rf ~/.npm /usr/local/lib/node_modules
         sudo curl -0 -L https://npmjs.org/install.sh | sudo sh
         NPMBIN="/usr/local/bin/npm"
         ls -alh $NPMBIN
         $NPMBIN -v
         echo "NPMBIN=$NPMBIN" >> $GITHUB_ENV

         cd /tmp/music/cloudtube/
         $NPMBIN rebuild
         #$NPMBIN run start
         sudo nohup $NPMBIN run start > nohup_npm.out 2> nohup_npm.err < /dev/null &

         cd /tmp/music/invidious/
         docker-compose -f ./docker-compose.yaml up -d --quiet-pull

         sleep 5
         sudo netstat -ntlpg
        
    - name: Start tunnel
      env:
        SECRET_MUSIC_PIPED_FE: ${{ secrets.SECRET_MUSIC_PIPED_FE }}
        SECRET_MUSIC_PIPED_BE: ${{ secrets.SECRET_MUSIC_PIPED_BE }}
        SECRET_MUSIC_PIPED_PROXY: ${{ secrets.SECRET_MUSIC_PIPED_PROXY }}
        SECRET_MUSIC_HYP_FE: ${{ secrets.SECRET_MUSIC_HYP_FE }}
        SECRET_MUSIC_HYP_BE: ${{ secrets.SECRET_MUSIC_HYP_BE }}
        SECRET_SSH_RUNNER_GW: ${{ secrets.SECRET_SSH_RUNNER_GW }}
        
        SECRET_MUSIC_CT: ${{ secrets.SECRET_MUSIC_CT }}
        SECRET_MUSIC_IV: ${{ secrets.SECRET_MUSIC_IV }}

        SECRET_SSH_GW_S: ${{ secrets.SECRET_SSH_GW_S }}
        SECRET_SSH_GW_S_FQDN: ${{ secrets.SECRET_SSH_GW_S_FQDN }}
        
      run: |
        #timeout 350m ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /tmp/key -R "$SECRET_MUSIC_PIPED_FE":80:localhost:8080 -R "$SECRET_MUSIC_PIPED_BE":80:localhost:8080 -R "$SECRET_MUSIC_PIPED_PROXY":80:localhost:8080 -R "$SECRET_MUSIC_HYP_FE":80:localhost:8081 -R "$SECRET_MUSIC_HYP_BE":80:localhost:3000 "$SECRET_SSH_RUNNER_GW" > /dev/null
        #timeout 350m ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /tmp/key -R "$SECRET_MUSIC_CT":80:localhost:10412 -R "$SECRET_MUSIC_IV":80:localhost:3001 "$SECRET_SSH_RUNNER_GW" > /dev/null
        
        timeout 350m ssh -N -o ServerAliveInterval=120 -o LogLevel=ERROR -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /tmp/key -R 127.0.0.1:1111:localhost:10412 -R 127.0.0.1:1112:localhost:3001 "$SECRET_SSH_GW_S" -p 2222 > /dev/null
